(()=>{"use strict";var o={"./src/helpers/browserHelper.ts":
/*!**************************************!*\
  !*** ./src/helpers/browserHelper.ts ***!
  \**************************************/function(e,t,r){var o=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&("get"in n?t.__esModule:!n.writable&&!n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){e[o=void 0===o?r:o]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&o(t,e,r);return n(t,e),t},s=this&&this.__awaiter||function(e,s,l,c){return new(l=l||Promise)(function(r,t){function o(e){try{i(c.next(e))}catch(e){t(e)}}function n(e){try{i(c.throw(e))}catch(e){t(e)}}function i(e){var t;e.done?r(e.value):((t=e.value)instanceof l?t:new l(function(e){e(t)})).then(o,n)}i((c=c.apply(e,s||[])).next())})},l=(Object.defineProperty(t,"__esModule",{value:!0}),t.browserHelper=t.deleteRoute=t.addRoute=t.addInitScript=t.getTab=t.closeTab=t.addTab=t.getBrowserContext=t.closeContext=t.createContext=t.closeBrowser=t.createBrowser=void 0,r(/*! playwright */"playwright"));const c=r(/*! ./globalVars */"./src/helpers/globalVars.ts"),u={chromium:l.chromium,firefox:l.firefox,webkit:l.webkit};t.createBrowser=function(){return s(this,void 0,void 0,function*(){var e=c.GlobalVars.getBrowserOptions();let t=1;for(;t<=3;)try{return yield u[c.GlobalVars.browser.name].launch(e)}catch(e){if(3===t)throw new Error(e.message);yield new Promise(e=>setTimeout(e,5e3)),t+=1}return null})},t.closeBrowser=function(e){return s(this,void 0,void 0,function*(){yield e.close()})},t.createContext=function(t){return s(this,void 0,void 0,function*(){var e=c.GlobalVars.getBrowserContextOptions();return t.newContext(e)})},t.closeContext=function(e){return s(this,void 0,void 0,function*(){yield e.close()})},t.getBrowserContext=function(e,t=-1){if(0===(e=e.contexts()).length)throw new Error("0 Context was found for this browser");if(t<-1||t>=e.length)throw new Error(`Position ${t} is wrong to get the context`);return-1===t?e[e.length-1]:e[t]},t.addTab=function(e){return s(this,void 0,void 0,function*(){return e.newPage()})},t.closeTab=function(e){return s(this,void 0,void 0,function*(){yield e.close()})},t.getTab=function(e,t=-1){if(0===(e=e.pages()).length)throw new Error("0 Page was found for this context");if(t<-1||t>=e.length)throw new Error(`Position ${t} is wrong to get the browser tab`);return-1===t?e[e.length-1]:e[t]},t.addRoute=function(e,t,r){return s(this,void 0,void 0,function*(){yield e.route(t,r)})},t.deleteRoute=function(e,t,r){return s(this,void 0,void 0,function*(){yield e.unroute(t,r)})},t.addInitScript=function(e,t,r){return s(this,void 0,void 0,function*(){yield e.addInitScript(t,r)})},t.browserHelper=i(r(/*! ./browserHelper */"./src/helpers/browserHelper.ts"))},"./src/helpers/dbHelper.ts":
/*!*********************************!*\
  !*** ./src/helpers/dbHelper.ts ***!
  \*********************************/function(e,t,r){var o=this&&this.__awaiter||function(e,s,l,c){return new(l=l||Promise)(function(r,t){function o(e){try{i(c.next(e))}catch(e){t(e)}}function n(e){try{i(c.throw(e))}catch(e){t(e)}}function i(e){var t;e.done?r(e.value):((t=e.value)instanceof l?t:new l(function(e){e(t)})).then(o,n)}i((c=c.apply(e,s||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0}),t.dbHelper=void 0;const n=r(/*! mysql2/promise */"mysql2/promise"),i=r(/*! ./globalVars */"./src/helpers/globalVars.ts");t.dbHelper=new class{createPool(e=i.GlobalVars.db){return(0,n.createPool)(e)}executeQuery(r){return o(this,void 0,void 0,function*(){const e=this.createPool();var t=yield e.execute(r);return yield this.destroyConnection(e),t})}getQueryResults(e){return o(this,void 0,void 0,function*(){return(yield this.executeQuery(e))[0]})}createCustomSelectQuery(t,e="*",r){var o=e=>`SELECT ${e} FROM ${t} ${r?"where "+r:""};`;return o("string"==typeof e?e:e.join(","))}getResultsCustomSelectQuery(e,t="*",r){return o(this,void 0,void 0,function*(){return this.getQueryResults(this.createCustomSelectQuery(e,t,r))})}getQueryFields(e){return o(this,void 0,void 0,function*(){return(yield this.executeQuery(e))[1]})}destroyConnection(e){return o(this,void 0,void 0,function*(){yield e.end()})}}},"./src/helpers/globalVars.ts":
/*!***********************************!*\
  !*** ./src/helpers/globalVars.ts ***!
  \***********************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GlobalVars=void 0;const o=r(/*! dotenv */"dotenv"),n=r(/*! playwright */"playwright");(0,o.config)({path:".env"});class i{static getBrowserOptions(){if(!this.platformsList.includes(this.platform))throw new Error("The framework can't handle the platform "+this.platform);if(!this.browsersList.includes(this.browser.name))throw new Error("The framework can't handle the browser "+this.browser.name);let e;return"mobile"===this.platform||"chromium"===this.browser.name?(e=Object.assign(Object.assign({},this.browser.options),{chromiumSandbox:!1})).args.push("--disable-web-security"):e=this.browser.options,e}static getBrowserContextOptions(){let e=this.browserContext.options;var t;return"mobile"===this.platform&&(t=n.devices[this.device.name],e=Object.assign(Object.assign({},e),t)),e}}(t.GlobalVars=i).browsersList=["chromium","firefox","webkit"],i.platformsList=["desktop","mobile"],i.platform=null!=(r=process.env.PLATFORM)?r:"desktop",i.browser={name:null!=(t=process.env.BROWSER)?t:"chromium",options:{headless:!("false"===process.env.HEADLESS),timeout:0,slowMo:parseInt(null!=(r=process.env.SLOW_MO)?r:"5",10),acceptDownloads:!(null==(t=process.env.ACCEPT_DOWNLOADS)||t),args:[]}},i.browserContext={options:{viewport:{width:parseInt(null!=(r=process.env.WIDTH)?r:"1680",10),height:parseInt(null!=(t=process.env.HEIGHT)?t:"900",10)},locale:null!=(r=process.env.LOCALE)?r:"fr-FR",httpCredentials:{username:null!=(t=process.env.HTTP_CRED_USERNAME)?t:"",password:null!=(r=process.env.HTTP_CRED_PASSWORD)?r:""}}},i.device={name:process.env.DEVICE},i.url=process.env.URL,i.db={host:null!=(t=process.env.DB_HOST)?t:"localhost",user:null!=(r=process.env.DB_USER)?r:"root",password:null!=(t=process.env.DB_PASSWORD)?t:"",database:null!=(r=process.env.DB_NAME)?r:"mydatabase"},i.screenshots={active:null==(t=process.env.SCREENSHOTS_ON)||t,folder:null!=(r=process.env.SCREENSHOTS_FOLDER)?r:"./screenshots"}},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/function(e,t,r){var o=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&("get"in n?t.__esModule:!n.writable&&!n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){e[o=void 0===o?r:o]=t[r]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&o(t,e,r);return n(t,e),t},s=(Object.defineProperty(t,"__esModule",{value:!0}),t.mochaHooks=t.CommonPage=t.browserHelper=t.deleteRoute=t.addRoute=t.addInitScript=t.getTab=t.closeTab=t.addTab=t.getBrowserContext=t.closeContext=t.createContext=t.closeBrowser=t.createBrowser=t.dbHelper=t.GlobalVars=void 0,r(/*! ./helpers/globalVars */"./src/helpers/globalVars.ts")),l=(Object.defineProperty(t,"GlobalVars",{enumerable:!0,get:function(){return s.GlobalVars}}),r(/*! ./helpers/dbHelper */"./src/helpers/dbHelper.ts")),c=(Object.defineProperty(t,"dbHelper",{enumerable:!0,get:function(){return l.dbHelper}}),r(/*! ./helpers/browserHelper */"./src/helpers/browserHelper.ts")),u=(Object.defineProperty(t,"createBrowser",{enumerable:!0,get:function(){return c.createBrowser}}),Object.defineProperty(t,"closeBrowser",{enumerable:!0,get:function(){return c.closeBrowser}}),Object.defineProperty(t,"createContext",{enumerable:!0,get:function(){return c.createContext}}),Object.defineProperty(t,"closeContext",{enumerable:!0,get:function(){return c.closeContext}}),Object.defineProperty(t,"getBrowserContext",{enumerable:!0,get:function(){return c.getBrowserContext}}),Object.defineProperty(t,"addTab",{enumerable:!0,get:function(){return c.addTab}}),Object.defineProperty(t,"closeTab",{enumerable:!0,get:function(){return c.closeTab}}),Object.defineProperty(t,"getTab",{enumerable:!0,get:function(){return c.getTab}}),Object.defineProperty(t,"addInitScript",{enumerable:!0,get:function(){return c.addInitScript}}),Object.defineProperty(t,"addRoute",{enumerable:!0,get:function(){return c.addRoute}}),Object.defineProperty(t,"deleteRoute",{enumerable:!0,get:function(){return c.deleteRoute}}),t.browserHelper=i(r(/*! ./helpers/browserHelper */"./src/helpers/browserHelper.ts")),r(/*! ./utils/pages/commonPage */"./src/utils/pages/commonPage.ts")),a=(Object.defineProperty(t,"CommonPage",{enumerable:!0,get:function(){return u.CommonPage}}),r(/*! ./utils/mocha/setup */"./src/utils/mocha/setup.ts"));Object.defineProperty(t,"mochaHooks",{enumerable:!0,get:function(){return a.mochaHooks}})},"./src/utils/mocha/setup.ts":
/*!**********************************!*\
  !*** ./src/utils/mocha/setup.ts ***!
  \**********************************/function(e,t,r){var o=this&&this.__awaiter||function(e,s,l,c){return new(l=l||Promise)(function(r,t){function o(e){try{i(c.next(e))}catch(e){t(e)}}function n(e){try{i(c.throw(e))}catch(e){t(e)}}function i(e){var t;e.done?r(e.value):((t=e.value)instanceof l?t:new l(function(e){e(t)})).then(o,n)}i((c=c.apply(e,s||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0}),t.mochaHooks=void 0,r(/*! module-alias/register */"module-alias/register");const n=r(/*! src/helpers/browserHelper */"./src/helpers/browserHelper.ts"),i=r(/*! src/helpers/globalVars */"./src/helpers/globalVars.ts");let s=1;t.mochaHooks={beforeAll:function(){return o(this,void 0,void 0,function*(){this.browser=yield(0,n.createBrowser)()})},afterEach:function(){var r;return o(this,void 0,void 0,function*(){if(i.GlobalVars.screenshots.active&&"failed"===(null==(r=this.currentTest)?void 0:r.state)){var e=(0,n.getBrowserContext)(this.browser);const t=(0,n.getTab)(e);yield t.screenshot({path:`${i.GlobalVars.screenshots.folder}/${s}.png`,fullPage:!0}),s++}})},afterAll:function(){return o(this,void 0,void 0,function*(){yield(0,n.closeBrowser)(this.browser)})}}},"./src/utils/pages/commonPage.ts":
/*!***************************************!*\
  !*** ./src/utils/pages/commonPage.ts ***!
  \***************************************/function(e,t){var n=this&&this.__awaiter||function(e,s,l,c){return new(l=l||Promise)(function(r,t){function o(e){try{i(c.next(e))}catch(e){t(e)}}function n(e){try{i(c.throw(e))}catch(e){t(e)}}function i(e){var t;e.done?r(e.value):((t=e.value)instanceof l?t:new l(function(e){e(t)})).then(o,n)}i((c=c.apply(e,s||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0}),t.CommonPage=void 0;t.CommonPage=class{getPageTitle(e){return n(this,void 0,void 0,function*(){return e.title()})}goTo(e,t,r="networkidle"){return n(this,void 0,void 0,function*(){yield e.goto(t,{waitUntil:r})})}getCurrentURL(e){return decodeURIComponent(e.url())}waitForTimeout(e,t=1e4){return n(this,void 0,void 0,function*(){yield e.waitForTimeout(t)})}waitForSelector(e,t,r,o=1e4){return n(this,void 0,void 0,function*(){yield e.waitForSelector(t,{state:r,timeout:o})})}waitForVisibleSelector(e,t,r=1e4){return n(this,void 0,void 0,function*(){yield this.waitForSelector(e,t,"visible",r)})}waitForHiddenSelector(e,t,r=1e4){return n(this,void 0,void 0,function*(){yield this.waitForSelector(e,t,"hidden",r)})}waitForAttachedSelector(e,t,r=1e4){return n(this,void 0,void 0,function*(){yield this.waitForSelector(e,t,"attached",r)})}waitForDetachedSelector(e,t,r=1e4){return n(this,void 0,void 0,function*(){yield this.waitForSelector(e,t,"detached",r)})}getTextContent(t,r,o=!0){return n(this,void 0,void 0,function*(){o&&(yield this.waitForVisibleSelector(t,r));const e=yield t.$eval(r,e=>e.textContent);return e?e.replace(/\s+/g," ").trim():null})}getAttributeContent(e,t,r){return n(this,void 0,void 0,function*(){return yield e.waitForSelector(t,{state:"attached"}),e.$eval(t,(e,t)=>e.getAttribute(t),r)})}elementVisible(e,t,r=10){return n(this,void 0,void 0,function*(){try{return yield this.waitForVisibleSelector(e,t,r),!0}catch(e){return!1}})}elementNotVisible(e,t,r=10){return n(this,void 0,void 0,function*(){try{return yield this.waitForHiddenSelector(e,t,r),!0}catch(e){return!1}})}openLinkWithTargetBlank(t,r,o="body .logo"){return n(this,void 0,void 0,function*(){const[e]=yield Promise.all([t.waitForEvent("popup"),t.click(r)]);return yield e.waitForLoadState("networkidle"),yield this.waitForVisibleSelector(e,o),e})}waitForSelectorAndClick(e,t,r=5e3){return n(this,void 0,void 0,function*(){yield this.waitForVisibleSelector(e,t,r),yield e.click(t)})}reloadPage(e){return n(this,void 0,void 0,function*(){yield e.reload()})}setValue(e,t,r){return n(this,void 0,void 0,function*(){yield e.fill(t,r)})}deleteTextFromInput(e,t){return n(this,void 0,void 0,function*(){yield this.waitForSelectorAndClick(e,t),yield e.click(t,{clickCount:3}),yield e.waitForTimeout(100),yield e.press(t,"Delete")})}dialogListener(e,t,r){e.once("dialog",e=>{t?""!==r?e.accept(r):e.accept():e.dismiss()})}closePage(e,t,r=-1){return n(this,void 0,void 0,function*(){return yield t.close(),-1!==r?e.pages()[r]:null})}scrollTo(e,t){return n(this,void 0,void 0,function*(){yield e.$eval(t,e=>e.scrollIntoView())})}selectByVisibleText(e,t,r,o=!1){return n(this,void 0,void 0,function*(){yield e.selectOption(t,{label:r.toString()},{force:o})})}getNumberFromText(t,r,o=0){return n(this,void 0,void 0,function*(){yield t.waitForTimeout(o);var e=yield this.getTextContent(t,r),e=/\d+/g.exec(e).toString();return parseInt(e,10)})}clickAndWaitForNavigation(e,t,r="networkidle"){return n(this,void 0,void 0,function*(){yield Promise.all([e.waitForNavigation({waitUntil:r}),e.click(t)])})}goToPreviousPage(e,t="load"){return n(this,void 0,void 0,function*(){yield e.goBack({waitUntil:t})})}isCheckboxSelected(e,t){return n(this,void 0,void 0,function*(){return e.isChecked(t)})}changeCheckboxValue(e,t,r=!0){return n(this,void 0,void 0,function*(){r?yield e.check(t):yield e.uncheck(t)})}dragAndDrop(e,t,r){return n(this,void 0,void 0,function*(){yield e.dragAndDrop(t,r)})}uploadFile(t,r,o){return n(this,void 0,void 0,function*(){const e=yield t.$(r);yield e.setInputFiles(o)})}uploadOnFileChooser(e,t,r){return n(this,void 0,void 0,function*(){e.once("filechooser",e=>{e.setFiles(r)}),yield e.click(t)})}getParentElement(e,t){return e.evaluateHandle(e=>document.querySelector(e).parentElement,t)}clickAndWaitForDownload(t,r,o=!1){return n(this,void 0,void 0,function*(){o&&(yield t.$eval(r,e=>e.target=""));const[e]=yield Promise.all([t.waitForEvent("download"),t.click(r)]);return e.path()})}getBoundingClientRect(e,t){return e.evaluate(e=>{return null==(e=document.querySelector(e))?void 0:e.getBoundingClientRect().toJSON()},t)}getDocumentClientSize(e){return e.evaluate(()=>({vw:Math.max(document.documentElement.clientWidth||0,window.innerWidth||0),vh:Math.max(document.documentElement.clientHeight||0,window.innerHeight||0)}))}isElementVisibleAfterScroll(r,o){return n(this,void 0,void 0,function*(){var e,t=yield this.getBoundingClientRect(r,o);return 0<=t.top&&0<=t.left&&(e=yield this.getDocumentClientSize(r),t.right<=e.vw&&t.bottom<=e.vh)})}}},dotenv:
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/e=>{e.exports=require("dotenv")},"module-alias/register":
/*!****************************************!*\
  !*** external "module-alias/register" ***!
  \****************************************/e=>{e.exports=require("module-alias/register")},"mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/e=>{e.exports=require("mysql2/promise")},playwright:
/*!*****************************!*\
  !*** external "playwright" ***!
  \*****************************/e=>{e.exports=require("playwright")}},n={};(function e(t){var r=n[t];if(void 0!==r)return r.exports;r=n[t]={exports:{}};return o[t].call(r.exports,r,r.exports,e),r.exports})("./src/index.ts")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,